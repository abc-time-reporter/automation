pipeline
{
    agent any
    parameters
    {
        string(defaultValue:'0',description:"Pull Request ID", name:"PR_no")
    }
    environment
    {
        GIT_API_HEAD ="https://api.github.com/repos/abc-time-reporter/main-time-reporter"
    }
    stages
    {
        stage("fetch-pull-request-info")
        {
            steps{
                script
                {
                    final int PR_ID = env.PR_no as Integer
                    echo "Building pull request for ${PR_ID}"

                }
                script
                {
                    def prResponse = httpRequest([
                        authentication :"jenkins_service_user",
                        url: "${GIT_API_HEAD}/pulls/${env.PR_no}",
                        validResponseCodes: '200'
                        

                    ])
                    def prJson = readJSON text: prResponse.content
                    env.source_branch = prJson.head.ref
                    echo "Source Branch: ${env.source_branch}"
                    env.target_branch = prJson.base.ref
                    echo "Target Branch: ${env.target_branch}"
                }
                script 
                {
                    def commitResponse = httpRequest([
                        authentication :"jenkins_service_user",
                        url: "${GIT_API_HEAD}/pulls/${env.PR_no}/commits",
                        validResponseCodes: '200'
                    ])
                    def commitsJson = readJSON text: commitResponse.content
                    env.commit_SHA = commitsJson[-1].sha
                    echo "${env.commit_SHA}"

                }
            }
            post 
            {
                failure
                {
                    script{
                    env.faliure_msg ="Failed to get PR Info"
                    }
                }
            }
        }
        stage("set PR Status")
        {
            steps{set_PR_status('succesful')}
            
        }
        stage("checkout source")
        {
            parallel
            {
                stage("revision-checkout")
                {
                    steps{
                        dir("revision-checkout")
                        {
                            sh'''
                            git init
                            git remote add origin https://jenkins_service_user@github.com/abc-time-reporter/main-time-reporter.git
                            git fetch --all
                            git checkout -b %source_branch% origin/%source_branch%
                            git merge origin/master
                            '''
                        }
                    }
                }
                stage("master-checkout")
                {
                    steps
                    {
                        echo "master checkout"
                    }
                }
            }
        }
        
    }
    

}
def set_PR_status(status)
    {
        httpRequest([
            acceptType :'APPLICATION_JSON',
            authentication : "jenkins_service_user",
            contentType  : 'APPLICATION_JSON',
            httpMode : 'POST',
            User-Agent:'request',
            url: "https://api.github.com/repos/abc-time-reporter/main-time-reporter/statuses/${env.commit_SHA}",
            requestBody : '''
            {
                 state: success, 
                context: jenkins-ci,
                description": Successfully built the pull request
            }'''
        ])
    }
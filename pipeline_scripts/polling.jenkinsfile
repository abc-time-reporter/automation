pipeline
{
    agent any
    environment 
    {
        GIT_API_HEAD ="https://api.github.com/repos/abc-time-reporter/main-time-reporter"
        PR_number=''
        job_done= false
        PR_Id=0
    }
    stages
    {
        stage("get last build")
        {
            steps 
            {
                script 
                {
                    try
                    {
                        last_build = params.last_build as Integer
                        echo "last build:${last_build}"

                    }
                    catch (Exception e)
                    {
                        echo("error")
                    }
                }
            }
        }
        stage("get github last build")
        {
            steps
            {
                script
                {
                    env.job_done =false
                    for(int i=last_build+1;last_build+10;i++)
                    {
                        echo "${i}"
                        def PrResponse =httpRequest([
                            authentication :"265950d0-3094-4dc3-98d5-47ee301eeb60",
                            url :"${GIT_API_HEAD}/pulls/${i}",
                            validResponseCodes: '200,404,401' 
                        ])
                        if (PrResponse.status ==200)
                         { 
                            
                            def prJson = readJSON text: PrResponse.content
                             if(prJson.get("state")=="open")
                                { 
                                  
                                   PR_number =prJson.get("id")
                                   job_done=true
                                   echo "triggering build for commit:${PR_number}"
                                   def params1 =[string(name:'PR_no',value:"${i}")]
                                   build job :"Pr build main",wait:false,parameters:params1 
                                   PR_Id=i
                                   break
                                }

                        }
                    }
                }
            }
        }
         stage('save variable')
        { 
            steps
           { 
                script 
                { 
                    if(job_done==true) 
                    { 
                        echo "var ${PR_Id}" 
                        properties([ parameters([ string(defaultValue: "${PR_Id}",
                        description: 'last recored pull request number', name: 'last_build', trim: true) ]) ]) 
                    } 
                    else 
                    { 
                        echo "var ${last_build}" 
                        properties([ parameters([ string(defaultValue: "${last_build}",
                        description: 'last recored pull request number',
                        name: 'last_build', trim: true) ])])
                    }
                }
           }
        }
        
    }
}